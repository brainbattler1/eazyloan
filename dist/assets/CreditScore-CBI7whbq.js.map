{"version":3,"file":"CreditScore-CBI7whbq.js","sources":["../../src/components/CreditScore.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { supabase } from '../utils/supabase';\n\nconst CreditScore = ({ onClose }) => {\n  const { user } = useAuth();\n  const [creditScore, setCreditScore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      fetchCreditScore();\n    }\n  }, [user]);\n\n  const fetchCreditScore = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Get current credit score\n      const { data: scoreData, error: scoreError } = await supabase\n        .rpc('get_current_credit_score', { check_user_id: user.id });\n\n      if (scoreError) {\n        console.warn('No existing credit score found, calculating new one:', scoreError.message);\n        await calculateNewCreditScore();\n        return;\n      }\n\n      if (scoreData && scoreData.length > 0) {\n        setCreditScore(scoreData[0]);\n      } else {\n        console.log('No credit score found, calculating new one');\n        await calculateNewCreditScore();\n      }\n    } catch (error) {\n      console.error('Error fetching credit score:', error);\n      setError('Failed to load credit score. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateNewCreditScore = async () => {\n    try {\n      // Calculate new credit score\n      const { data: newScore, error: calcError } = await supabase\n        .rpc('calculate_credit_score', { check_user_id: user.id });\n\n      if (calcError) {\n        console.error('Error calculating credit score:', calcError);\n        // Fallback to a default score if calculation fails\n        const fallbackScore = 650;\n        const scoreBand = getScoreBand(fallbackScore);\n        \n        const newCreditScore = {\n          score: fallbackScore,\n          score_band: scoreBand,\n          calculated_at: new Date().toISOString(),\n          factors: generateFactors(fallbackScore),\n          recommendations: generateRecommendations(fallbackScore)\n        };\n        \n        setCreditScore(newCreditScore);\n        return;\n      }\n\n      const scoreValue = newScore || 650;\n      const scoreBand = getScoreBand(scoreValue);\n      \n      // Insert new credit score record\n      const { data: insertData, error: insertError } = await supabase\n        .from('credit_scores')\n        .insert([{\n          user_id: user.id,\n          score: scoreValue,\n          score_band: scoreBand,\n          factors: generateFactors(scoreValue),\n          recommendations: generateRecommendations(scoreValue),\n          bureau_source: 'internal',\n          is_current: true\n        }])\n        .select()\n        .single();\n\n      if (insertError) {\n        console.error('Error inserting credit score:', insertError);\n        // Still show the calculated score even if insert fails\n        setCreditScore({\n          score: scoreValue,\n          score_band: scoreBand,\n          calculated_at: new Date().toISOString(),\n          factors: generateFactors(scoreValue),\n          recommendations: generateRecommendations(scoreValue)\n        });\n        return;\n      }\n\n      setCreditScore({\n        score: scoreValue,\n        score_band: scoreBand,\n        calculated_at: new Date().toISOString(),\n        factors: generateFactors(scoreValue),\n        recommendations: generateRecommendations(scoreValue)\n      });\n\n    } catch (error) {\n      console.error('Error calculating credit score:', error);\n      setError('Failed to calculate credit score. Please try again.');\n    }\n  };\n\n  const refreshCreditScore = async () => {\n    setRefreshing(true);\n    setError(null);\n    \n    try {\n      // Mark current score as not current\n      await supabase\n        .from('credit_scores')\n        .update({ is_current: false })\n        .eq('user_id', user.id)\n        .eq('is_current', true);\n\n      // Calculate new score\n      await calculateNewCreditScore();\n      \n    } catch (error) {\n      console.error('Error refreshing credit score:', error);\n      setError('Failed to refresh credit score. Please try again.');\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  const getScoreBand = (score) => {\n    if (score >= 800) return 'excellent';\n    if (score >= 740) return 'very_good';\n    if (score >= 670) return 'good';\n    if (score >= 580) return 'fair';\n    return 'poor';\n  };\n\n  const getScoreBandColor = (band) => {\n    switch (band) {\n      case 'excellent': return '#10b981';\n      case 'very_good': return '#22c55e';\n      case 'good': return '#3b82f6';\n      case 'fair': return '#f59e0b';\n      case 'poor': return '#ef4444';\n      default: return '#6b7280';\n    }\n  };\n\n  const getScoreBandLabel = (band) => {\n    switch (band) {\n      case 'excellent': return 'Excellent';\n      case 'very_good': return 'Very Good';\n      case 'good': return 'Good';\n      case 'fair': return 'Fair';\n      case 'poor': return 'Poor';\n      default: return 'Unknown';\n    }\n  };\n\n  const generateFactors = (score) => {\n    // Simulate credit factors based on score\n    const baseFactors = {\n      payment_history: Math.min(100, score / 8.5 + Math.random() * 10),\n      credit_utilization: Math.max(0, 100 - (score - 300) / 5.5 + Math.random() * 20),\n      length_of_history: Math.min(100, (score - 300) / 5.5 + Math.random() * 15),\n      credit_mix: Math.min(100, score / 8.5 + Math.random() * 15),\n      new_credit: Math.min(100, score / 8.5 + Math.random() * 10)\n    };\n\n    // Round to integers\n    Object.keys(baseFactors).forEach(key => {\n      baseFactors[key] = Math.round(baseFactors[key]);\n    });\n\n    return baseFactors;\n  };\n\n  const generateRecommendations = (score) => {\n    const recommendations = [];\n\n    if (score < 650) {\n      recommendations.push({\n        title: \"Improve Payment History\",\n        description: \"Make all loan payments on time to build a positive payment history\",\n        impact: \"High\",\n        timeframe: \"3-6 months\"\n      });\n    }\n\n    if (score < 700) {\n      recommendations.push({\n        title: \"Build Credit History\",\n        description: \"Maintain active loan accounts to demonstrate responsible credit management\",\n        impact: \"Medium\",\n        timeframe: \"6-12 months\"\n      });\n    }\n\n    if (score < 750) {\n      recommendations.push({\n        title: \"Diversify Credit Types\",\n        description: \"Consider different types of loans to show you can manage various credit products\",\n        impact: \"Medium\",\n        timeframe: \"12+ months\"\n      });\n    }\n\n    recommendations.push({\n      title: \"Monitor Your Score\",\n      description: \"Check your credit score regularly to track improvements and catch any issues early\",\n      impact: \"Low\",\n      timeframe: \"Ongoing\"\n    });\n\n    return recommendations;\n  };\n\n  const getScorePercentage = (score) => {\n    return ((score - 300) / (850 - 300)) * 100;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <div className=\"loading-center\">\n            <div className=\"loading-spinner\"></div>\n            <p>Calculating your credit score...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"modal-overlay\" onClick={onClose}>\n        <div className=\"credit-score-modal\" onClick={(e) => e.stopPropagation()}>\n          <div className=\"modal-header\">\n            <h2>📈 Credit Score</h2>\n            <button className=\"close-btn\" onClick={onClose}>✕</button>\n          </div>\n          <div className=\"error-state\">\n            <div className=\"error-icon\">⚠️</div>\n            <h3>Unable to Load Credit Score</h3>\n            <p>{error}</p>\n            <button className=\"retry-btn\" onClick={fetchCreditScore}>\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"credit-score-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>📈 Credit Score</h2>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"credit-score-content\">\n          {/* Score Display */}\n          <div className=\"score-display\">\n            <div className=\"score-circle\">\n              <div className=\"score-progress\">\n                <svg viewBox=\"0 0 100 100\" className=\"score-svg\">\n                  <circle\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"45\"\n                    fill=\"none\"\n                    stroke=\"#e5e7eb\"\n                    strokeWidth=\"8\"\n                  />\n                  <circle\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"45\"\n                    fill=\"none\"\n                    stroke={getScoreBandColor(creditScore?.score_band)}\n                    strokeWidth=\"8\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={`${getScorePercentage(creditScore?.score) * 2.83} 283`}\n                    transform=\"rotate(-90 50 50)\"\n                    className=\"score-progress-bar\"\n                  />\n                </svg>\n                <div className=\"score-text\">\n                  <div className=\"score-number\">{creditScore?.score}</div>\n                  <div className=\"score-range\">300-850</div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"score-info\">\n              <div className=\"score-band\" style={{ color: getScoreBandColor(creditScore?.score_band) }}>\n                {getScoreBandLabel(creditScore?.score_band)}\n              </div>\n              <div className=\"score-date\">\n                Last updated: {new Date(creditScore?.calculated_at).toLocaleDateString()}\n              </div>\n              <button \n                className=\"refresh-btn\" \n                onClick={refreshCreditScore}\n                disabled={refreshing}\n              >\n                {refreshing ? '🔄 Updating...' : '🔄 Refresh Score'}\n              </button>\n            </div>\n          </div>\n\n          {/* Score Factors */}\n          <div className=\"score-factors\">\n            <h3>📊 Score Factors</h3>\n            <div className=\"factors-grid\">\n              {creditScore?.factors && Object.entries(creditScore.factors).map(([factor, value]) => (\n                <div key={factor} className=\"factor-item\">\n                  <div className=\"factor-header\">\n                    <span className=\"factor-name\">\n                      {factor.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </span>\n                    <span className=\"factor-value\">{Math.round(value)}%</span>\n                  </div>\n                  <div className=\"factor-bar\">\n                    <div \n                      className=\"factor-progress\"\n                      style={{ \n                        width: `${value}%`,\n                        backgroundColor: value >= 80 ? '#10b981' : value >= 60 ? '#f59e0b' : '#ef4444'\n                      }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Recommendations */}\n          <div className=\"recommendations\">\n            <h3>💡 Recommendations</h3>\n            <div className=\"recommendations-list\">\n              {creditScore?.recommendations && creditScore.recommendations.map((rec, index) => (\n                <div key={index} className=\"recommendation-item\">\n                  <div className=\"recommendation-header\">\n                    <h4>{rec.title}</h4>\n                    <span className={`impact-badge impact-${rec.impact?.toLowerCase()}`}>\n                      {rec.impact} Impact\n                    </span>\n                  </div>\n                  <p>{rec.description}</p>\n                  <div className=\"recommendation-timeframe\">\n                    ⏱️ Expected timeframe: {rec.timeframe}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Credit Score Ranges */}\n          <div className=\"score-ranges\">\n            <h3>📋 Credit Score Ranges</h3>\n            <div className=\"ranges-list\">\n              <div className=\"range-item\">\n                <div className=\"range-color\" style={{ backgroundColor: '#ef4444' }}></div>\n                <div className=\"range-info\">\n                  <span className=\"range-label\">Poor</span>\n                  <span className=\"range-values\">300-579</span>\n                </div>\n              </div>\n              <div className=\"range-item\">\n                <div className=\"range-color\" style={{ backgroundColor: '#f59e0b' }}></div>\n                <div className=\"range-info\">\n                  <span className=\"range-label\">Fair</span>\n                  <span className=\"range-values\">580-669</span>\n                </div>\n              </div>\n              <div className=\"range-item\">\n                <div className=\"range-color\" style={{ backgroundColor: '#3b82f6' }}></div>\n                <div className=\"range-info\">\n                  <span className=\"range-label\">Good</span>\n                  <span className=\"range-values\">670-739</span>\n                </div>\n              </div>\n              <div className=\"range-item\">\n                <div className=\"range-color\" style={{ backgroundColor: '#22c55e' }}></div>\n                <div className=\"range-info\">\n                  <span className=\"range-label\">Very Good</span>\n                  <span className=\"range-values\">740-799</span>\n                </div>\n              </div>\n              <div className=\"range-item\">\n                <div className=\"range-color\" style={{ backgroundColor: '#10b981' }}></div>\n                <div className=\"range-info\">\n                  <span className=\"range-label\">Excellent</span>\n                  <span className=\"range-values\">800-850</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <style>{`\n          .credit-score-modal {\n            background: white;\n            border-radius: 24px;\n            max-width: 800px;\n            width: 90vw;\n            max-height: 90vh;\n            overflow-y: auto;\n            box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n            border: 1px solid #e2e8f0;\n          }\n\n          .credit-score-content {\n            padding: 2rem;\n          }\n\n          .score-display {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 3rem;\n            margin-bottom: 3rem;\n            padding: 2rem;\n            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n            border-radius: 20px;\n            border: 1px solid #bae6fd;\n          }\n\n          .score-circle {\n            position: relative;\n          }\n\n          .score-progress {\n            position: relative;\n            width: 200px;\n            height: 200px;\n          }\n\n          .score-svg {\n            width: 100%;\n            height: 100%;\n            transform: rotate(-90deg);\n          }\n\n          .score-progress-bar {\n            transition: stroke-dasharray 1s ease-in-out;\n          }\n\n          .score-text {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n          }\n\n          .score-number {\n            font-size: 3rem;\n            font-weight: 800;\n            color: #1e293b;\n            line-height: 1;\n          }\n\n          .score-range {\n            font-size: 0.875rem;\n            color: #64748b;\n            font-weight: 600;\n          }\n\n          .score-info {\n            text-align: center;\n          }\n\n          .score-band {\n            font-size: 2rem;\n            font-weight: 700;\n            margin-bottom: 0.5rem;\n          }\n\n          .score-date {\n            font-size: 0.875rem;\n            color: #64748b;\n            margin-bottom: 1.5rem;\n          }\n\n          .refresh-btn {\n            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n            color: white;\n            border: none;\n            border-radius: 12px;\n            padding: 0.75rem 1.5rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            font-size: 0.875rem;\n          }\n\n          .refresh-btn:hover:not(:disabled) {\n            transform: translateY(-2px);\n            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);\n          }\n\n          .refresh-btn:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n          }\n\n          .score-factors {\n            margin-bottom: 3rem;\n          }\n\n          .score-factors h3 {\n            color: #374151;\n            margin-bottom: 1.5rem;\n            font-size: 1.25rem;\n          }\n\n          .factors-grid {\n            display: grid;\n            gap: 1rem;\n          }\n\n          .factor-item {\n            background: #f8fafc;\n            border: 1px solid #e2e8f0;\n            border-radius: 12px;\n            padding: 1.5rem;\n          }\n\n          .factor-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 1rem;\n          }\n\n          .factor-name {\n            font-weight: 600;\n            color: #374151;\n          }\n\n          .factor-value {\n            font-weight: 700;\n            color: #1e293b;\n          }\n\n          .factor-bar {\n            width: 100%;\n            height: 8px;\n            background: #e5e7eb;\n            border-radius: 4px;\n            overflow: hidden;\n          }\n\n          .factor-progress {\n            height: 100%;\n            border-radius: 4px;\n            transition: width 1s ease-in-out;\n          }\n\n          .recommendations {\n            margin-bottom: 3rem;\n          }\n\n          .recommendations h3 {\n            color: #374151;\n            margin-bottom: 1.5rem;\n            font-size: 1.25rem;\n          }\n\n          .recommendations-list {\n            display: grid;\n            gap: 1rem;\n          }\n\n          .recommendation-item {\n            background: #f8fafc;\n            border: 1px solid #e2e8f0;\n            border-radius: 12px;\n            padding: 1.5rem;\n          }\n\n          .recommendation-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 1rem;\n          }\n\n          .recommendation-header h4 {\n            color: #374151;\n            font-size: 1rem;\n            margin: 0;\n          }\n\n          .impact-badge {\n            padding: 0.25rem 0.75rem;\n            border-radius: 20px;\n            font-size: 0.75rem;\n            font-weight: 700;\n            text-transform: uppercase;\n            letter-spacing: 0.05em;\n          }\n\n          .impact-high {\n            background: #fee2e2;\n            color: #991b1b;\n          }\n\n          .impact-medium {\n            background: #fef3c7;\n            color: #92400e;\n          }\n\n          .impact-low {\n            background: #d1fae5;\n            color: #065f46;\n          }\n\n          .recommendation-item p {\n            color: #64748b;\n            margin-bottom: 1rem;\n            line-height: 1.6;\n          }\n\n          .recommendation-timeframe {\n            font-size: 0.875rem;\n            color: #64748b;\n            font-weight: 600;\n          }\n\n          .score-ranges h3 {\n            color: #374151;\n            margin-bottom: 1.5rem;\n            font-size: 1.25rem;\n          }\n\n          .ranges-list {\n            display: grid;\n            gap: 0.75rem;\n          }\n\n          .range-item {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            padding: 1rem;\n            background: #f8fafc;\n            border: 1px solid #e2e8f0;\n            border-radius: 8px;\n          }\n\n          .range-color {\n            width: 16px;\n            height: 16px;\n            border-radius: 50%;\n          }\n\n          .range-info {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            flex: 1;\n          }\n\n          .range-label {\n            font-weight: 600;\n            color: #374151;\n          }\n\n          .range-values {\n            font-weight: 600;\n            color: #64748b;\n            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n          }\n\n          .error-state {\n            text-align: center;\n            padding: 3rem;\n          }\n\n          .error-icon {\n            font-size: 4rem;\n            margin-bottom: 1rem;\n          }\n\n          .error-state h3 {\n            color: #374151;\n            margin-bottom: 1rem;\n          }\n\n          .error-state p {\n            color: #6b7280;\n            margin-bottom: 2rem;\n          }\n\n          .retry-btn {\n            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n            color: white;\n            border: none;\n            border-radius: 12px;\n            padding: 1rem 2rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.2s ease;\n          }\n\n          .retry-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);\n          }\n\n          .loading-center {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            padding: 3rem;\n          }\n\n          .loading-spinner {\n            width: 48px;\n            height: 48px;\n            border: 4px solid #e5e7eb;\n            border-top: 4px solid #3b82f6;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin-bottom: 1rem;\n          }\n\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n\n          @media (max-width: 768px) {\n            .credit-score-modal {\n              width: 95vw;\n              max-height: 95vh;\n            }\n\n            .credit-score-content {\n              padding: 1rem;\n            }\n\n            .score-display {\n              flex-direction: column;\n              gap: 2rem;\n            }\n\n            .score-progress {\n              width: 150px;\n              height: 150px;\n            }\n\n            .score-number {\n              font-size: 2.5rem;\n            }\n\n            .recommendation-header {\n              flex-direction: column;\n              align-items: flex-start;\n              gap: 0.5rem;\n            }\n          }\n        `}</style>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditScore;"],"names":["CreditScore","onClose","user","useAuth","creditScore","setCreditScore","useState","loading","setLoading","error","setError","refreshing","setRefreshing","useEffect","fetchCreditScore","scoreData","scoreError","supabase","calculateNewCreditScore","newScore","calcError","fallbackScore","scoreBand","getScoreBand","newCreditScore","generateFactors","generateRecommendations","scoreValue","insertData","insertError","refreshCreditScore","score","getScoreBandColor","band","getScoreBandLabel","baseFactors","key","recommendations","getScorePercentage","jsx","jsxs","e","factor","value","l","rec","index","_a"],"mappings":"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}